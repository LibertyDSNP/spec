(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"wx+c":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return h}));var i=a("Fcif"),n=a("+I+c"),r=(a("mXGw"),a("/FXl")),s=a("TjRS"),o=(a("aD51"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"pages/Archivists/Overview.md"}});var c={_frontmatter:o},l=s.a;function h(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(r.b)(l,Object(i.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"dsnparchives-overview"},"DSNPArchives Overview"),Object(r.b)("p",null,"The job of an Archivist is to permanently store Batch content and DSNPMessages in a format that is easily validated and retrieved."),Object(r.b)("p",null,"The Archivist must be able to access chain data and all DSNP Message URLs."),Object(r.b)("h2",{id:"validations-that-archivists-could-perform"},"Validations that Archivists could perform"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Signature validation - proof that author provided a real signature"),Object(r.b)("li",{parentName:"ul"},"Signature authentication - proof that the From address is the signer, or that signer is a valid delegate  (proof of authorship)"),Object(r.b)("li",{parentName:"ul"},"There is retrievable content at the URL given in the DSNP message"),Object(r.b)("li",{parentName:"ul"},"The content hash is valid - that is, the URL serves the claimed data")),Object(r.b)("p",null,"All signatures for the announcement are included in the batch regardless of how the signature was requested (or not)"))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"pages/Archivists/Overview.md"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---pages-archivists-overview-md-c9c8395354146ada751a.js.map