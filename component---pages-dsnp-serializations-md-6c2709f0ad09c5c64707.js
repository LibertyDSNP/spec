(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"4i6Y":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return m}));var n=a("Fcif"),b=a("+I+c"),l=(a("mXGw"),a("/FXl")),r=a("TjRS"),i=(a("aD51"),["components"]),c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"pages/DSNP/Serializations.md"}});var d={_frontmatter:c},p=r.a;function m(e){var t=e.components,a=Object(b.a)(e,i);return Object(l.b)(p,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"serializations"},"Serializations"),Object(l.b)("p",null,"Serialization is how the value should be stringified for signing and for transfer between systems.\nMost serializations use outside standards, but some require additional clarifications, provided here."),Object(l.b)("h2",{id:"decimal"},"decimal"),Object(l.b)("p",null,"Used to represent integers.\nStrings are used to avoid issues with different implementations of numbers."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"MUST use 0-9 representation"),Object(l.b)("li",{parentName:"ul"},"MUST NOT have spaces or separators"),Object(l.b)("li",{parentName:"ul"},"MUST be a string")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Invalid"),Object(l.b)("th",{parentName:"tr",align:null},"Why"),Object(l.b)("th",{parentName:"tr",align:null},"Valid"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x123")),Object(l.b)("td",{parentName:"tr",align:null},"Must be decimal"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},'"291"'))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"291"),Object(l.b)("td",{parentName:"tr",align:null},"Must be a string"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},'"291"'))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"291n")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"BigInt(291)")," serialization appends an ",Object(l.b)("inlineCode",{parentName:"td"},"n")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},'"291"'))))),Object(l.b)("h2",{id:"hexadecimal"},"hexadecimal"),Object(l.b)("p",null,"Used to represent bytes."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"MUST use 0-9,a-f representation"),Object(l.b)("li",{parentName:"ul"},"MUST be lowercase"),Object(l.b)("li",{parentName:"ul"},"MUST be prefixed with a ",Object(l.b)("inlineCode",{parentName:"li"},"0x")),Object(l.b)("li",{parentName:"ul"},"MUST NOT have spaces or separators"),Object(l.b)("li",{parentName:"ul"},"MUST have two characters per byte in addition to the ",Object(l.b)("inlineCode",{parentName:"li"},"0x")," characters")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Bytes"),Object(l.b)("th",{parentName:"tr",align:null},"Invalid"),Object(l.b)("th",{parentName:"tr",align:null},"Valid"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"2"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x123")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x0123"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"2"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"123h")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x0123"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"2"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x0ABC")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x0abc"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"8"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0xabc")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x0000000000000abc"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"32"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x3e34c4325f4461b9355027b314f3eb56d31af549f7da7bd9ef1ce951651e")),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"0x00003e34c4325f4461b9355027b314f3eb56d31af549f7da7bd9ef1ce951651e"))))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"pages/DSNP/Serializations.md"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---pages-dsnp-serializations-md-6c2709f0ad09c5c64707.js.map